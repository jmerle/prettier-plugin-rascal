import * as fs from 'fs';
import * as path from 'path';
import { getASTTypes } from './ast-parser';
import kebabCase = require('lodash.kebabcase');

const types = getASTTypes();
const lines: string[] = [];

lines.push("// This file is automatically generated by running 'yarn generate:printer'\n");
lines.push("import { Doc, FastPath, ParserOptions } from 'prettier';");

for (const parentType in types) {
  const functions = Object.keys(types[parentType]).map(subType => `print${parentType}${subType}`);
  lines.push(`import { ${functions.join(', ')} } from './printers/${kebabCase(parentType)}';`);
}

lines.push('');
lines.push(
  'export function print(path: FastPath<ASTNode>, options: ParserOptions, print: (path: FastPath<ASTNode>) => Doc): Doc {',
);
lines.push('  switch (path.getValue()._type) {');

for (const parentType in types) {
  for (const subType in types[parentType]) {
    lines.push(`    case '${parentType}.${subType}':`);
    lines.push(
      `      return print${parentType}${subType}(path as FastPath<${parentType}${subType}Node>, options, print);`,
    );
  }
}

lines.push('  }');
lines.push('}');

const outputPath = path.resolve(__dirname, '../src/printer.ts');
fs.writeFileSync(outputPath, lines.join('\n') + '\n');

console.log(`Successfully wrote printer to ${outputPath}`);
